## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004-2006 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Autoconf, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl/override --lib=libgnu --source-base=gl --m4-base=gl/m4 --doc-base=doc --aux-dir=. --avoid=xalloc-die --libtool --macro-prefix=gl arcfour base64 crc error fdl gc-des gc-hmac-md5 gc-hmac-sha1 gc-md4 gc-md5 gc-pbkdf2-sha1 gc-random gendocs getaddrinfo getdate gethostname getline getopt getpass getsubopt gnupload maintainer-makefile progname read-file realloc setenv socklen stdint strcase strchrnul strdup strndup strtok_r strverscmp sys_select sys_socket sys_stat timegm unistd vasnprintf vasprintf xalloc xgetdomainname xgethostname xreadlink xstrndup xvasprintf

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LTLIBRARIES = libgnu.la

libgnu_la_SOURCES =
libgnu_la_LIBADD = $(LTLIBOBJS)
libgnu_la_LDFLAGS = $(AM_LDFLAGS)
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES = core *.stackdump
MOSTLYCLEANDIRS =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

AM_CPPFLAGS =

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	cp -f $(srcdir)/alloca_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libgnu_la_SOURCES += allocsa.h allocsa.c
EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module arcfour

EXTRA_DIST += arcfour.h

## end   gnulib module arcfour

## begin gnulib module arpa_inet

BUILT_SOURCES += $(ARPA_INET_H)

# We need the following in order to create <arpa/inet.h> when the system
# doesn't have one.
arpa/inet.h:
	test -d arpa || mkdir arpa
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += arpa/inet.h arpa/inet.h-t
MOSTLYCLEANDIRS += arpa

## end   gnulib module arpa_inet

## begin gnulib module base64

libgnu_la_SOURCES += base64.h base64.c

## end   gnulib module base64

## begin gnulib module crc

EXTRA_DIST += crc.h

## end   gnulib module crc

## begin gnulib module gc

EXTRA_DIST += gc.h
if GL_COND_LIBTOOL
libgnu_la_LDFLAGS += $(LTLIBGCRYPT)
endif

## end   gnulib module gc

## begin gnulib module gc-des

EXTRA_DIST += des.h

## end   gnulib module gc-des

## begin gnulib module gc-hmac-md5

EXTRA_DIST += memxor.h hmac.h md5.h

## end   gnulib module gc-hmac-md5

## begin gnulib module gc-hmac-sha1

EXTRA_DIST += memxor.h hmac.h sha1.h

## end   gnulib module gc-hmac-sha1

## begin gnulib module gc-md4

EXTRA_DIST += md4.h

## end   gnulib module gc-md4

## begin gnulib module gc-md5

libgnu_la_SOURCES += md5.h

## end   gnulib module gc-md5

## begin gnulib module getaddrinfo

libgnu_la_SOURCES += getaddrinfo.h

## end   gnulib module getaddrinfo

## begin gnulib module getdate

libgnu_la_SOURCES += getdate.y
BUILT_SOURCES += getdate.c
MAINTAINERCLEANFILES += getdate.c
EXTRA_DIST += getdate.c getdate.h

## end   gnulib module getdate

## begin gnulib module getdelim

EXTRA_DIST += getdelim.h

## end   gnulib module getdelim

## begin gnulib module getdomainname

libgnu_la_SOURCES += getdomainname.h

## end   gnulib module getdomainname

## begin gnulib module getline

EXTRA_DIST += getline.h

## end   gnulib module getline

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create <getopt.h> when the system
# doesn't have one that works with the given compiler.
getopt.h: getopt_.h
	cp -f $(srcdir)/getopt_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module getpass

EXTRA_DIST += getpass.h

## end   gnulib module getpass

## begin gnulib module getsubopt

libgnu_la_SOURCES += getsubopt.h

## end   gnulib module getsubopt

## begin gnulib module gettext-h

libgnu_la_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module inet_ntop

libgnu_la_SOURCES += inet_ntop.h

## end   gnulib module inet_ntop

## begin gnulib module mbchar

libgnu_la_SOURCES += mbchar.h

## end   gnulib module mbchar

## begin gnulib module mbuiter

libgnu_la_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module netinet_in

BUILT_SOURCES += $(NETINET_IN_H)

# We need the following in order to create <netinet/in.h> when the system
# doesn't have one.
netinet/in.h:
	test -d netinet || mkdir netinet
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += netinet/in.h netinet/in.h-t
MOSTLYCLEANDIRS += netinet

## end   gnulib module netinet_in

## begin gnulib module progname

libgnu_la_SOURCES += progname.h progname.c

## end   gnulib module progname

## begin gnulib module read-file

EXTRA_DIST += read-file.h

## end   gnulib module read-file

## begin gnulib module setenv

libgnu_la_SOURCES += setenv.h

## end   gnulib module setenv

## begin gnulib module size_max

libgnu_la_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module snprintf

libgnu_la_SOURCES += snprintf.h

## end   gnulib module snprintf

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)
EXTRA_DIST += stdint_.h

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	rm -f $@-t $@
	sed -e 's/@''HAVE_WCHAR_H''@/$(HAVE_WCHAR_H)/g' \
	    -e 's/@''HAVE_STDINT_H''@/$(HAVE_STDINT_H)/g' \
	    -e 's|@''ABSOLUTE_STDINT_H''@|$(ABSOLUTE_STDINT_H)|g' \
	    -e 's/@''HAVE_SYS_TYPES_H''@/$(HAVE_SYS_TYPES_H)/g' \
	    -e 's/@''HAVE_INTTYPES_H''@/$(HAVE_INTTYPES_H)/g' \
	    -e 's/@''HAVE_SYS_INTTYPES_H''@/$(HAVE_SYS_INTTYPES_H)/g' \
	    -e 's/@''HAVE_SYS_BITYPES_H''@/$(HAVE_SYS_BITYPES_H)/g' \
	    -e 's/@''HAVE_LONG_LONG_INT''@/$(HAVE_LONG_LONG_INT)/g' \
	    -e 's/@''BITSIZEOF_PTRDIFF_T''@/$(BITSIZEOF_PTRDIFF_T)/g' \
	    -e 's/@''PTRDIFF_T_SUFFIX''@/$(PTRDIFF_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_SIG_ATOMIC_T''@/$(BITSIZEOF_SIG_ATOMIC_T)/g' \
	    -e 's/@''HAVE_SIGNED_SIG_ATOMIC_T''@/$(HAVE_SIGNED_SIG_ATOMIC_T)/g' \
	    -e 's/@''SIG_ATOMIC_T_SUFFIX''@/$(SIG_ATOMIC_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_SIZE_T''@/$(BITSIZEOF_SIZE_T)/g' \
	    -e 's/@''SIZE_T_SUFFIX''@/$(SIZE_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_WCHAR_T''@/$(BITSIZEOF_WCHAR_T)/g' \
	    -e 's/@''HAVE_SIGNED_WCHAR_T''@/$(HAVE_SIGNED_WCHAR_T)/g' \
	    -e 's/@''WCHAR_T_SUFFIX''@/$(WCHAR_T_SUFFIX)/g' \
	    -e 's/@''BITSIZEOF_WINT_T''@/$(BITSIZEOF_WINT_T)/g' \
	    -e 's/@''HAVE_SIGNED_WINT_T''@/$(HAVE_SIGNED_WINT_T)/g' \
	    -e 's/@''WINT_T_SUFFIX''@/$(WINT_T_SUFFIX)/g' \
	    < $(srcdir)/stdint_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

## end   gnulib module stdint

## begin gnulib module strcase

libgnu_la_SOURCES += strcase.h

## end   gnulib module strcase

## begin gnulib module strchrnul

libgnu_la_SOURCES += strchrnul.h

## end   gnulib module strchrnul

## begin gnulib module strdup

EXTRA_DIST += strdup.h

## end   gnulib module strdup

## begin gnulib module strndup

EXTRA_DIST += strndup.h

## end   gnulib module strndup

## begin gnulib module strnlen

EXTRA_DIST += strnlen.h

## end   gnulib module strnlen

## begin gnulib module strnlen1

libgnu_la_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strtok_r

libgnu_la_SOURCES += strtok_r.h

## end   gnulib module strtok_r

## begin gnulib module strverscmp

EXTRA_DIST += strverscmp.h

## end   gnulib module strverscmp

## begin gnulib module sys_select

BUILT_SOURCES += $(SYS_SELECT_H)

# We need the following in order to create <sys/select.h> when the system
# doesn't have one that works with the given compiler.
sys/select.h:
	test -d sys || mkdir sys
	rm -f $@-t $@
	echo '#include <sys/socket.h>' >$@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/select.h sys/select.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_select

## begin gnulib module sys_socket

BUILT_SOURCES += $(SYS_SOCKET_H)
EXTRA_DIST += socket_.h

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: socket_.h
	test -d sys || mkdir sys
	cp -f $(srcdir)/socket_.h $@-t
	mv -f $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_socket

## begin gnulib module sys_stat

BUILT_SOURCES += $(SYS_STAT_H)
EXTRA_DIST += stat_.h

# We need the following in order to create <sys/stat.h> when the system
# has one that is incomplete.
sys/stat.h: stat_.h
	test -d sys || mkdir sys
	rm -f $@-t $@
	sed -e 's|@''ABSOLUTE_SYS_STAT_H''@|$(ABSOLUTE_SYS_STAT_H)|g' \
	    < $(srcdir)/stat_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/stat.h sys/stat.h-t
MOSTLYCLEANDIRS += sys

## end   gnulib module sys_stat

## begin gnulib module time_r

EXTRA_DIST += time_r.h

## end   gnulib module time_r

## begin gnulib module timegm

libgnu_la_SOURCES += timegm.h

## end   gnulib module timegm

## begin gnulib module timespec

EXTRA_DIST += timespec.h

## end   gnulib module timespec

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	echo '/* Empty placeholder for $@.  */' >$@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module vasnprintf

libgnu_la_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vasprintf

libgnu_la_SOURCES += vasprintf.h

## end   gnulib module vasprintf

## begin gnulib module wcwidth

libgnu_la_SOURCES += wcwidth.h

## end   gnulib module wcwidth

## begin gnulib module xalloc

EXTRA_DIST += xalloc.h

## end   gnulib module xalloc

## begin gnulib module xgetdomainname

libgnu_la_SOURCES += xgetdomainname.h xgetdomainname.c

## end   gnulib module xgetdomainname

## begin gnulib module xgethostname

libgnu_la_SOURCES += xgethostname.h xgethostname.c

## end   gnulib module xgethostname

## begin gnulib module xreadlink

EXTRA_DIST += xreadlink.h

## end   gnulib module xreadlink

## begin gnulib module xsize

libgnu_la_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module xstrndup

libgnu_la_SOURCES += xstrndup.h xstrndup.c

## end   gnulib module xstrndup

## begin gnulib module xvasprintf

libgnu_la_SOURCES += xvasprintf.h xvasprintf.c xasprintf.c

## end   gnulib module xvasprintf


mostlyclean-local: mostlyclean-generic
	@test -z "$(MOSTLYCLEANDIRS)" || \
	  for dir in $(MOSTLYCLEANDIRS); do \
	    if test -d $$dir; then \
	      echo "rmdir $$dir"; rmdir $$dir; \
	    fi; \
	  done
