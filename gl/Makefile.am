## Process this file with automake to produce Makefile.in.
# Copyright (C) 2004 Free Software Foundation, Inc.
#
# This file is free software, distributed under the terms of the GNU
# General Public License.  As a special exception to the GNU General
# Public License, this file may be distributed as part of a program
# that contains a configuration script generated by Automake, under
# the same distribution terms as the rest of that program.
#
# Generated by gnulib-tool.
# Reproduce by: gnulib-tool --import --dir=. --lib=libgnu --source-base=gl --m4-base=gl/m4 --aux-dir=. --avoid=xalloc-die --libtool --macro-prefix=gl base64 crc error gc-arcfour gc-des gc-hmac-md5 gc-hmac-sha1 gc-md4 gc-md5 gc-pbkdf2-sha1 gc-random getaddrinfo getdate gethostname getline getopt getpass getsubopt maintainer-makefile progname realloc setenv socklen strcase strchrnul strdup strndup strtok_r strverscmp timegm vasnprintf vasprintf xalloc xgetdomainname xgethostname xreadlink xstrndup xvasprintf

AUTOMAKE_OPTIONS = 1.5 gnits no-dependencies

noinst_LTLIBRARIES = libgnu.la

libgnu_la_SOURCES =
libgnu_la_LIBADD = @LTLIBOBJS@
noinst_HEADERS =
EXTRA_DIST =
BUILT_SOURCES =
SUFFIXES =
MOSTLYCLEANFILES =
CLEANFILES =
DISTCLEANFILES =
MAINTAINERCLEANFILES =

## begin gnulib module alloca-opt

BUILT_SOURCES += $(ALLOCA_H)
EXTRA_DIST += alloca_.h

# We need the following in order to create <alloca.h> when the system
# doesn't have one that works with the given compiler.
alloca.h: alloca_.h
	cp $(srcdir)/alloca_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += alloca.h alloca.h-t

## end   gnulib module alloca-opt

## begin gnulib module allocsa

libgnu_la_SOURCES += allocsa.h allocsa.c
EXTRA_DIST += allocsa.valgrind

## end   gnulib module allocsa

## begin gnulib module base64

libgnu_la_SOURCES += base64.h base64.c

## end   gnulib module base64

## begin gnulib module gc

if GL_COND_LIBTOOL
libgnu_la_LIBADD += $(LTLIBGCRYPT)
else
libgnu_la_LIBADD += $(LIBGCRYPT)
endif

## end   gnulib module gc

## begin gnulib module getaddrinfo

libgnu_la_SOURCES += getaddrinfo.h

## end   gnulib module getaddrinfo

## begin gnulib module getdate

BUILT_SOURCES += getdate.c
MAINTAINERCLEANFILES += getdate.c
EXTRA_DIST += getdate.c

## end   gnulib module getdate

## begin gnulib module getdomainname

libgnu_la_SOURCES += getdomainname.h

## end   gnulib module getdomainname

## begin gnulib module getopt

BUILT_SOURCES += $(GETOPT_H)
EXTRA_DIST += getopt_.h getopt_int.h

# We need the following in order to create <getopt.h> when the system
# doesn't have one that works with the given compiler.
getopt.h: getopt_.h
	cp $(srcdir)/getopt_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += getopt.h getopt.h-t

## end   gnulib module getopt

## begin gnulib module getsubopt

libgnu_la_SOURCES += getsubopt.h

## end   gnulib module getsubopt

## begin gnulib module gettext-h

libgnu_la_SOURCES += gettext.h

## end   gnulib module gettext-h

## begin gnulib module mbchar

libgnu_la_SOURCES += mbchar.h

## end   gnulib module mbchar

## begin gnulib module mbuiter

libgnu_la_SOURCES += mbuiter.h

## end   gnulib module mbuiter

## begin gnulib module progname

libgnu_la_SOURCES += progname.h progname.c

## end   gnulib module progname

## begin gnulib module setenv

libgnu_la_SOURCES += setenv.h

## end   gnulib module setenv

## begin gnulib module size_max

libgnu_la_SOURCES += size_max.h

## end   gnulib module size_max

## begin gnulib module stdbool

BUILT_SOURCES += $(STDBOOL_H)
EXTRA_DIST += stdbool_.h

# We need the following in order to create <stdbool.h> when the system
# doesn't have one that works.
stdbool.h: stdbool_.h
	sed -e 's/@''HAVE__BOOL''@/$(HAVE__BOOL)/g' < $(srcdir)/stdbool_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdbool.h stdbool.h-t

## end   gnulib module stdbool

## begin gnulib module stdint

BUILT_SOURCES += $(STDINT_H)
EXTRA_DIST += stdint_.h

# We need the following in order to create <stdint.h> when the system
# doesn't have one that works with the given compiler.
stdint.h: stdint_.h
	sed -e 's/@''HAVE_LONG_64BIT''@/$(HAVE_LONG_64BIT)/g;s/@''HAVE_LONG_LONG_64BIT@/$(HAVE_LONG_LONG_64BIT)/g' < $(srcdir)/stdint_.h > $@-t
	mv $@-t $@
MOSTLYCLEANFILES += stdint.h stdint.h-t

## end   gnulib module stdint

## begin gnulib module strcase

libgnu_la_SOURCES += strcase.h

## end   gnulib module strcase

## begin gnulib module strchrnul

libgnu_la_SOURCES += strchrnul.h

## end   gnulib module strchrnul

## begin gnulib module strnlen1

libgnu_la_SOURCES += strnlen1.h strnlen1.c

## end   gnulib module strnlen1

## begin gnulib module strtok_r

libgnu_la_SOURCES += strtok_r.h

## end   gnulib module strtok_r

## begin gnulib module sys_socket

BUILT_SOURCES += $(SYS_SOCKET_H)
EXTRA_DIST += socket_.h

# We need the following in order to create <sys/socket.h> when the system
# doesn't have one that works with the given compiler.
sys/socket.h: socket_.h
	test -d sys || mkdir sys
	cp $(srcdir)/socket_.h $@-t
	mv $@-t $@
MOSTLYCLEANFILES += sys/socket.h sys/socket.h-t

mostlyclean-local:
	-rmdir sys 2>/dev/null

## end   gnulib module sys_socket

## begin gnulib module time_r

libgnu_la_SOURCES += time_r.h

## end   gnulib module time_r

## begin gnulib module timegm

libgnu_la_SOURCES += timegm.h

## end   gnulib module timegm

## begin gnulib module unistd

BUILT_SOURCES += $(UNISTD_H)

# We need the following in order to create an empty placeholder for
# <unistd.h> when the system doesn't have one.
unistd.h:
	echo '/* Empty placeholder for $@.  */' >$@
MOSTLYCLEANFILES += unistd.h

## end   gnulib module unistd

## begin gnulib module vasnprintf

libgnu_la_SOURCES += printf-args.h printf-parse.h vasnprintf.h

## end   gnulib module vasnprintf

## begin gnulib module vasprintf

libgnu_la_SOURCES += vasprintf.h

## end   gnulib module vasprintf

## begin gnulib module xgetdomainname

libgnu_la_SOURCES += xgetdomainname.h xgetdomainname.c

## end   gnulib module xgetdomainname

## begin gnulib module xgethostname

libgnu_la_SOURCES += xgethostname.h xgethostname.c

## end   gnulib module xgethostname

## begin gnulib module xsize

libgnu_la_SOURCES += xsize.h

## end   gnulib module xsize

## begin gnulib module xstrndup

libgnu_la_SOURCES += xstrndup.h xstrndup.c

## end   gnulib module xstrndup

## begin gnulib module xvasprintf

libgnu_la_SOURCES += xvasprintf.h xvasprintf.c xasprintf.c

## end   gnulib module xvasprintf


# Makefile.am ends here
